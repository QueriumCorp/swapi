#------------------------------------------------------------------------------
# written by: Lawrence McDaniel
#             https://lawrencemcdaniel.com
#
# date:       sep-2022
#
# usage:      top-level workflow. Initiated manually from Github Actions console page
#             - Build the Docker container
#             - upload to AWS ECR
#             - tag as latest.
#------------------------------------------------------------------------------
name: Build and Push

on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-2
      REPOSITORY: querium/swapi
    steps:
      # checkout github all repos for this workflow: this repo, plus, 
      # all Gihubs Actions repos in this workflow. 
      # this is written and maintained by Github
      - name: Checkout
        uses: actions/checkout@v3.0.2

      # AWS helper method. creates a session token that's usable by all other
      # aws-actions. Prevents us from having to explicitly provide authentication credentials
      # to each aws-actions method individually.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Docker Buildx
        id: setup-docker
        uses: docker/setup-buildx-action@v2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.5.3

      #------------------------------------------------------------------------
      # Initialize our Ubuntu environment using a common Action stored in this
      # repository
      #------------------------------------------------------------------------
      - name: Initialize environment
        uses: ./.github/actions/init

      # verify that the ECR repository exists. If not, then create it.
      # written and maintained by Lawrence McDaniel
      - name: Create the AWS ECR repository
        id: create-repository
        uses: lpm0073/aws-ecr-create@v0.1.1
        with:
          aws-ecr-repository: ${{ env.REPOSITORY }}

      # Derive the three components of the AWS ECR URI
      # - AWS_ECR_REGISTRY: 320713933456.dkr.ecr.us-east-2.amazonaws.com
      # - CONTAINER_NAME: querium/swapi-dev
      # - DATE_TAG: 202209162127
      - name: Intialize environment variables
        id: init-env
        shell: bash
        run: |
          echo "AWS_ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
          echo "CONTAINER_NAME=${{ env.REPOSITORY }}" >> $GITHUB_ENV
          echo "DATE_TAG=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV

      # create the AWS ECR URI
      # example: 320713933456.dkr.ecr.us-east-2.amazonaws.com/querium/swapi-dev:202209162127
      - name: Initialize Docker image URI
        id: init-docker-image
        shell: bash
        run: |
          echo "DOCKER_IMAGE_TAGGED=${AWS_ECR_REGISTRY}/${CONTAINER_NAME}:${DATE_TAG}" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_LATEST=${AWS_ECR_REGISTRY}/${CONTAINER_NAME}:latest" >> $GITHUB_ENV

      - name: Build the image
        id: tutor-build-image
        shell: bash
        run: |-
          docker build . -t ${DOCKER_IMAGE_TAGGED}

      - name: Push the image
        id: docker-push-image
        shell: bash
        run: |-
          docker tag ${DOCKER_IMAGE_TAGGED} ${DOCKER_IMAGE_LATEST}
          docker push ${DOCKER_IMAGE_LATEST}
